/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package TOR;
import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.nio.charset.StandardCharsets;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;

import java.time.Duration;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
/**
 *
 * @author ΠΑΝΟΣ
 */
public class UserGUI extends javax.swing.JFrame {
    
   
    
    /** Creates new form UserGUI */
    public UserGUI() throws ParseException {
        initComponents();
        updateMovieBox();
       
         getContentPane().setBackground(Color.cyan);
        jPanel1.setBackground(Color.cyan);
         if(Movie.getSelectedItem()==null)
         {
         
         Tickets.setSelectedItem(null);
         Tickets.removeAllItems();
         }
      
     
         repaint();
      
           
                 
        
         
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem2 = new javax.swing.JCheckBoxMenuItem();
        jCheckBoxMenuItem3 = new javax.swing.JCheckBoxMenuItem();
        FirstName = new javax.swing.JTextField();
        LastName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Movie = new javax.swing.JComboBox<>();
        Tickets = new javax.swing.JComboBox<>();
        Time = new javax.swing.JComboBox<>();
        Room = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        B2 = new javax.swing.JCheckBox();
        B1 = new javax.swing.JCheckBox();
        F10 = new javax.swing.JCheckBox();
        F9 = new javax.swing.JCheckBox();
        F8 = new javax.swing.JCheckBox();
        F7 = new javax.swing.JCheckBox();
        F6 = new javax.swing.JCheckBox();
        F5 = new javax.swing.JCheckBox();
        F4 = new javax.swing.JCheckBox();
        F3 = new javax.swing.JCheckBox();
        F2 = new javax.swing.JCheckBox();
        F1 = new javax.swing.JCheckBox();
        D10 = new javax.swing.JCheckBox();
        D9 = new javax.swing.JCheckBox();
        D8 = new javax.swing.JCheckBox();
        D7 = new javax.swing.JCheckBox();
        D6 = new javax.swing.JCheckBox();
        D5 = new javax.swing.JCheckBox();
        D4 = new javax.swing.JCheckBox();
        D3 = new javax.swing.JCheckBox();
        D2 = new javax.swing.JCheckBox();
        D1 = new javax.swing.JCheckBox();
        C10 = new javax.swing.JCheckBox();
        C9 = new javax.swing.JCheckBox();
        E10 = new javax.swing.JCheckBox();
        E9 = new javax.swing.JCheckBox();
        C8 = new javax.swing.JCheckBox();
        C7 = new javax.swing.JCheckBox();
        C6 = new javax.swing.JCheckBox();
        C5 = new javax.swing.JCheckBox();
        E8 = new javax.swing.JCheckBox();
        C4 = new javax.swing.JCheckBox();
        E7 = new javax.swing.JCheckBox();
        C3 = new javax.swing.JCheckBox();
        E6 = new javax.swing.JCheckBox();
        C2 = new javax.swing.JCheckBox();
        E5 = new javax.swing.JCheckBox();
        C1 = new javax.swing.JCheckBox();
        E4 = new javax.swing.JCheckBox();
        E3 = new javax.swing.JCheckBox();
        E2 = new javax.swing.JCheckBox();
        E1 = new javax.swing.JCheckBox();
        B10 = new javax.swing.JCheckBox();
        B9 = new javax.swing.JCheckBox();
        B8 = new javax.swing.JCheckBox();
        B7 = new javax.swing.JCheckBox();
        B6 = new javax.swing.JCheckBox();
        B5 = new javax.swing.JCheckBox();
        B4 = new javax.swing.JCheckBox();
        B3 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jCheckBoxMenuItem2.setSelected(true);
        jCheckBoxMenuItem2.setText("jCheckBoxMenuItem2");

        jCheckBoxMenuItem3.setSelected(true);
        jCheckBoxMenuItem3.setText("jCheckBoxMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Online Movie Reservation Tool");
        setResizable(false);

        FirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Movie:");

        jButton1.setText("Create Reservation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("No. of tickets:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Time:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Room:");

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel9.setText("First Name:");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel10.setText("Last Name:");

        Movie.setSelectedItem(null);
        Movie.setToolTipText("");
        Movie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieActionPerformed(evt);
            }
        });

        Tickets.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        Tickets.setToolTipText("");
        Tickets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TicketsActionPerformed(evt);
            }
        });

        Time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimeActionPerformed(evt);
            }
        });

        Room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoomActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 3, 18)); // NOI18N
        jLabel3.setText("~REQUIRED INFORMATION~");

        jPanel1.setLayout(null);

        jLayeredPane1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLayeredPane1);
        jLayeredPane1.setBounds(0, 453, 0, 0);

        B2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2.png"))); // NOI18N
        B2.setName("B2"); // NOI18N
        B2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2-S.png"))); // NOI18N
        jPanel1.add(B2);
        B2.setBounds(460, 140, 30, 30);

        B1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1.png"))); // NOI18N
        B1.setName("B1"); // NOI18N
        B1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1-S.png"))); // NOI18N
        jPanel1.add(B1);
        B1.setBounds(500, 140, 37, 30);

        F10.setText("F10");
        F10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10.png"))); // NOI18N
        F10.setName("F10"); // NOI18N
        F10.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10-S.png"))); // NOI18N
        jPanel1.add(F10);
        F10.setBounds(100, 370, 30, 30);

        F9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9.png"))); // NOI18N
        F9.setName("F9"); // NOI18N
        F9.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9-S.png"))); // NOI18N
        jPanel1.add(F9);
        F9.setBounds(140, 370, 30, 30);

        F8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8.png"))); // NOI18N
        F8.setName("F8"); // NOI18N
        F8.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8-S.png"))); // NOI18N
        jPanel1.add(F8);
        F8.setBounds(180, 370, 30, 30);

        F7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7.png"))); // NOI18N
        F7.setName("F7"); // NOI18N
        F7.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7-S.png"))); // NOI18N
        jPanel1.add(F7);
        F7.setBounds(240, 370, 30, 30);

        F6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6.png"))); // NOI18N
        F6.setName("F6"); // NOI18N
        F6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6-S.png"))); // NOI18N
        jPanel1.add(F6);
        F6.setBounds(280, 370, 30, 30);

        F5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5.png"))); // NOI18N
        F5.setName("F5"); // NOI18N
        F5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5-S.png"))); // NOI18N
        jPanel1.add(F5);
        F5.setBounds(320, 370, 30, 30);

        F4.setToolTipText("");
        F4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4.png"))); // NOI18N
        F4.setName("F4"); // NOI18N
        F4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4-S.png"))); // NOI18N
        jPanel1.add(F4);
        F4.setBounds(360, 370, 30, 30);

        F3.setText("F3");
        F3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3.png"))); // NOI18N
        F3.setName("F3"); // NOI18N
        F3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3-S.png"))); // NOI18N
        jPanel1.add(F3);
        F3.setBounds(420, 370, 30, 30);

        F2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2.png"))); // NOI18N
        F2.setName("F2"); // NOI18N
        F2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2-S.png"))); // NOI18N
        jPanel1.add(F2);
        F2.setBounds(460, 370, 30, 30);

        F1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1.png"))); // NOI18N
        F1.setName("F1"); // NOI18N
        F1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1-S.png"))); // NOI18N
        jPanel1.add(F1);
        F1.setBounds(500, 370, 37, 30);

        D10.setText("D10");
        D10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10.png"))); // NOI18N
        D10.setName("D10"); // NOI18N
        D10.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10-S.png"))); // NOI18N
        D10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D10ActionPerformed(evt);
            }
        });
        jPanel1.add(D10);
        D10.setBounds(100, 250, 30, 30);

        D9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9.png"))); // NOI18N
        D9.setName("D9"); // NOI18N
        D9.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9-S.png"))); // NOI18N
        jPanel1.add(D9);
        D9.setBounds(140, 250, 30, 30);

        D8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8.png"))); // NOI18N
        D8.setName("D8"); // NOI18N
        D8.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8-S.png"))); // NOI18N
        jPanel1.add(D8);
        D8.setBounds(180, 250, 30, 30);

        D7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7.png"))); // NOI18N
        D7.setName("D7"); // NOI18N
        D7.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7-S.png"))); // NOI18N
        jPanel1.add(D7);
        D7.setBounds(240, 250, 30, 30);

        D6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6.png"))); // NOI18N
        D6.setName("D6"); // NOI18N
        D6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6-S.png"))); // NOI18N
        jPanel1.add(D6);
        D6.setBounds(280, 250, 30, 30);

        D5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5.png"))); // NOI18N
        D5.setName("D5"); // NOI18N
        D5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5-S.png"))); // NOI18N
        jPanel1.add(D5);
        D5.setBounds(320, 250, 30, 30);

        D4.setToolTipText("");
        D4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4.png"))); // NOI18N
        D4.setName("D4"); // NOI18N
        D4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4-S.png"))); // NOI18N
        jPanel1.add(D4);
        D4.setBounds(360, 250, 30, 30);

        D3.setText("F3");
        D3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3.png"))); // NOI18N
        D3.setName("D3"); // NOI18N
        D3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3-S.png"))); // NOI18N
        jPanel1.add(D3);
        D3.setBounds(420, 250, 30, 30);

        D2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2.png"))); // NOI18N
        D2.setName("D2"); // NOI18N
        D2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2-S.png"))); // NOI18N
        jPanel1.add(D2);
        D2.setBounds(460, 250, 30, 30);

        D1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1.png"))); // NOI18N
        D1.setName("D1"); // NOI18N
        D1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1-S.png"))); // NOI18N
        jPanel1.add(D1);
        D1.setBounds(500, 250, 37, 30);

        C10.setText("D10");
        C10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10.png"))); // NOI18N
        C10.setName("C10"); // NOI18N
        C10.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10-S.png"))); // NOI18N
        C10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C10ActionPerformed(evt);
            }
        });
        jPanel1.add(C10);
        C10.setBounds(100, 200, 30, 30);

        C9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9.png"))); // NOI18N
        C9.setName("C9"); // NOI18N
        C9.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9-S.png"))); // NOI18N
        jPanel1.add(C9);
        C9.setBounds(140, 200, 30, 30);

        E10.setText("D10");
        E10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10.png"))); // NOI18N
        E10.setName("E10"); // NOI18N
        E10.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10-S.png"))); // NOI18N
        E10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E10ActionPerformed(evt);
            }
        });
        jPanel1.add(E10);
        E10.setBounds(100, 310, 30, 30);

        E9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9.png"))); // NOI18N
        E9.setName("E9"); // NOI18N
        E9.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9-S.png"))); // NOI18N
        jPanel1.add(E9);
        E9.setBounds(140, 310, 30, 30);

        C8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8.png"))); // NOI18N
        C8.setName("C8"); // NOI18N
        C8.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8-S.png"))); // NOI18N
        jPanel1.add(C8);
        C8.setBounds(180, 200, 30, 30);

        C7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7.png"))); // NOI18N
        C7.setName("C7"); // NOI18N
        C7.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7-S.png"))); // NOI18N
        jPanel1.add(C7);
        C7.setBounds(240, 200, 30, 30);

        C6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6.png"))); // NOI18N
        C6.setName("C6"); // NOI18N
        C6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6-S.png"))); // NOI18N
        jPanel1.add(C6);
        C6.setBounds(280, 200, 30, 30);

        C5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5.png"))); // NOI18N
        C5.setName("C5"); // NOI18N
        C5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5-S.png"))); // NOI18N
        jPanel1.add(C5);
        C5.setBounds(320, 200, 30, 30);

        E8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8.png"))); // NOI18N
        E8.setName("E8"); // NOI18N
        E8.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8-S.png"))); // NOI18N
        jPanel1.add(E8);
        E8.setBounds(180, 310, 30, 30);

        C4.setToolTipText("");
        C4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4.png"))); // NOI18N
        C4.setName("C4"); // NOI18N
        C4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4-S.png"))); // NOI18N
        jPanel1.add(C4);
        C4.setBounds(360, 200, 30, 30);

        E7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7.png"))); // NOI18N
        E7.setName("E7"); // NOI18N
        E7.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7-S.png"))); // NOI18N
        jPanel1.add(E7);
        E7.setBounds(240, 310, 30, 30);

        C3.setText("F3");
        C3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3.png"))); // NOI18N
        C3.setName("C3"); // NOI18N
        C3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3-S.png"))); // NOI18N
        jPanel1.add(C3);
        C3.setBounds(420, 200, 30, 30);

        E6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6.png"))); // NOI18N
        E6.setName("E6"); // NOI18N
        E6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6-S.png"))); // NOI18N
        jPanel1.add(E6);
        E6.setBounds(280, 310, 30, 30);

        C2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2.png"))); // NOI18N
        C2.setName("C2"); // NOI18N
        C2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2-S.png"))); // NOI18N
        jPanel1.add(C2);
        C2.setBounds(460, 200, 30, 30);

        E5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5.png"))); // NOI18N
        E5.setName("E5"); // NOI18N
        E5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5-S.png"))); // NOI18N
        jPanel1.add(E5);
        E5.setBounds(320, 310, 30, 30);

        C1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1.png"))); // NOI18N
        C1.setName("C1"); // NOI18N
        C1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1-S.png"))); // NOI18N
        jPanel1.add(C1);
        C1.setBounds(500, 200, 37, 30);

        E4.setToolTipText("");
        E4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4.png"))); // NOI18N
        E4.setName("E4"); // NOI18N
        E4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4-S.png"))); // NOI18N
        jPanel1.add(E4);
        E4.setBounds(360, 310, 30, 30);

        E3.setText("F3");
        E3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3.png"))); // NOI18N
        E3.setName("E3"); // NOI18N
        E3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3-S.png"))); // NOI18N
        jPanel1.add(E3);
        E3.setBounds(420, 310, 30, 30);

        E2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2.png"))); // NOI18N
        E2.setName("E2"); // NOI18N
        E2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F2-S.png"))); // NOI18N
        jPanel1.add(E2);
        E2.setBounds(460, 310, 30, 30);

        E1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1.png"))); // NOI18N
        E1.setName("E1"); // NOI18N
        E1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F1-S.png"))); // NOI18N
        jPanel1.add(E1);
        E1.setBounds(500, 310, 37, 30);

        B10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10.png"))); // NOI18N
        B10.setName("B10"); // NOI18N
        B10.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F10-S.png"))); // NOI18N
        B10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B10ActionPerformed(evt);
            }
        });
        jPanel1.add(B10);
        B10.setBounds(100, 140, 30, 30);

        B9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9.png"))); // NOI18N
        B9.setName("B9"); // NOI18N
        B9.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F9-S.png"))); // NOI18N
        jPanel1.add(B9);
        B9.setBounds(140, 140, 30, 30);

        B8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8.png"))); // NOI18N
        B8.setName("B8"); // NOI18N
        B8.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F8-S.png"))); // NOI18N
        jPanel1.add(B8);
        B8.setBounds(180, 140, 30, 30);

        B7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7.png"))); // NOI18N
        B7.setName("B7"); // NOI18N
        B7.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F7-S.png"))); // NOI18N
        jPanel1.add(B7);
        B7.setBounds(240, 140, 30, 30);

        B6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6.png"))); // NOI18N
        B6.setName("B6"); // NOI18N
        B6.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F6-S.png"))); // NOI18N
        jPanel1.add(B6);
        B6.setBounds(280, 140, 30, 30);

        B5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5.png"))); // NOI18N
        B5.setName("B5"); // NOI18N
        B5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F5-S.png"))); // NOI18N
        jPanel1.add(B5);
        B5.setBounds(320, 140, 30, 30);

        B4.setToolTipText("");
        B4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4.png"))); // NOI18N
        B4.setName("B4"); // NOI18N
        B4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F4-S.png"))); // NOI18N
        jPanel1.add(B4);
        B4.setBounds(360, 140, 30, 30);

        B3.setText("F3");
        B3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3.png"))); // NOI18N
        B3.setName("B3"); // NOI18N
        B3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/F3-S.png"))); // NOI18N
        jPanel1.add(B3);
        B3.setBounds(420, 140, 30, 30);

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(240, 240, 240));
        jButton2.setText("Choose seats for me");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(190, 420, 178, 23);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/TOR/SeatsAΒ.png"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, -30, 560, 490);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Movie, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tickets, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Room, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Time, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jLabel9)
                                .addGap(115, 115, 115)
                                .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(115, 115, 115)
                                .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel3)))
                        .addGap(117, 117, 117))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel6)))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Movie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tickets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieActionPerformed
        
    DeleteOldValues();
    updateRoomBox();
    TimeConstruct();
    ReservedSeats();
    
       
        
    }//GEN-LAST:event_MovieActionPerformed

    private void TicketsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TicketsActionPerformed
       
 
        
    }//GEN-LAST:event_TicketsActionPerformed

    private void TimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimeActionPerformed

        
        
        
    }//GEN-LAST:event_TimeActionPerformed

    private void RoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoomActionPerformed

    }//GEN-LAST:event_RoomActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        AutoSeatInput();
       
   
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
        
   
   
       
       
       
         if(FirstName.getText().trim().isEmpty() || LastName.getText().trim().isEmpty() ||  Movie.getSelectedItem()==null)
         {
         JOptionPane.showMessageDialog(rootPane, "Error! Please complete all fields.");   
         
         }
         else if (IsReserved()==true)
         {
          JOptionPane.showMessageDialog(rootPane, "You have selected seats that are already taken."+"\n"+"Please choose another seats.");   
         }
         else if ( TicketValidation())
         {
         JOptionPane.showMessageDialog(rootPane, "You have selected more seats than your selected tickets.");   
         
         }
         else
         {
        Connection con;
        SqlCon movie_one_insert = new SqlCon();
        con = movie_one_insert.getConnection();
        

        
          String SelectedMovie= Movie.getSelectedItem().toString();
          String userTicketCost = null;
        
   
            try {
                 Statement s;
                s = con.createStatement();
                ResultSet rs = s.executeQuery("Select TicketCost from adminmovieconfig Where MovieName ='" + SelectedMovie + "'");
                while(rs.next() )
                {
                   userTicketCost =  rs.getString("TicketCost");
                    
                }}
              
             catch (SQLException ex) {
                Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
             Random randomGenerator = new Random();
             int random = randomGenerator.nextInt(10000);
             
            try {
                Statement s;
                s = con.createStatement();
                ResultSet rs = s.executeQuery("Select ReservationID from usergui");
                ArrayList list = new ArrayList();
                while(rs.next() )
                {
                    list.add(rs.getString("ReservationID"));
                    
                }
                
                if  (   !(list.isEmpty())){
                
                String [] itemnameArray = new String [list.size()];
            list.toArray(itemnameArray);
            boolean flagID = true;
             StringBuilder stringBuilder = new StringBuilder();
             
              for (int i = 0; i < itemnameArray.length; i++)
              {
            stringBuilder.append(itemnameArray[i] + " ");          
                }
              
                String[] numbers = stringBuilder.toString().split(" ");
                for (String number : numbers)
                    {
                        list.add(Integer.valueOf(number));
                    }
                int[] array = Arrays.asList(numbers).stream().mapToInt(Integer::parseInt).toArray();

                int i=0;
             for (i=0; i==array.length; i++)
             {
                 
                if (random == array[i])
                    {               
                    flagID = false;
                    }
                    if (flagID == false)
                    {
                        random = randomGenerator.nextInt(10000);
                    }       
             }           
               
               }
           else
                {
                
                random = randomGenerator.nextInt(10000);
                
                }
             }
             catch (SQLException ex) {
                Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
                      
            String randomID = random+"";
            
        String querys = "insert into usergui "
                + "(FirstName,LastName, Time,Movie,Room, Tickets, Seats,ReservationID,TicketCost)" 
                + "values(?,?,?,?,?,?,?,?,?)";
        
        
           try {
               
                PreparedStatement pstmt = con.prepareStatement(querys);
             
           
          
            
                pstmt.setString(1, FirstName.getText());
                pstmt.setString(2, LastName.getText());
                pstmt.setString(3, Time.getSelectedItem().toString());
                pstmt.setString(4, Movie.getSelectedItem().toString());
                pstmt.setString(5, Room.getSelectedItem().toString());
                pstmt.setString(6, Tickets.getSelectedItem().toString() +  " ");
                pstmt.setString(7 ,getSeats());
                pstmt.setString(8, randomID);
                pstmt.setString(9, userTicketCost);
                pstmt.executeUpdate();
                
            
             
           
            
            
            
            JOptionPane.showMessageDialog(rootPane, "Thank you for gour reservation! Your Resevation ID is: " + randomID);   
           dispose();
            }
        catch (SQLException ex)
        {
            
            Logger.getLogger(AdminMovies.class.getName()).log(Level.SEVERE, null, ex);
        }      

         }
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void FirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstNameActionPerformed

    private void E10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_E10ActionPerformed

    private void D10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_D10ActionPerformed

    private void C10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_C10ActionPerformed

    private void B10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_B10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UserGUI().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox B1;
    private javax.swing.JCheckBox B10;
    private javax.swing.JCheckBox B2;
    private javax.swing.JCheckBox B3;
    private javax.swing.JCheckBox B4;
    private javax.swing.JCheckBox B5;
    private javax.swing.JCheckBox B6;
    private javax.swing.JCheckBox B7;
    private javax.swing.JCheckBox B8;
    private javax.swing.JCheckBox B9;
    private javax.swing.JCheckBox C1;
    private javax.swing.JCheckBox C10;
    private javax.swing.JCheckBox C2;
    private javax.swing.JCheckBox C3;
    private javax.swing.JCheckBox C4;
    private javax.swing.JCheckBox C5;
    private javax.swing.JCheckBox C6;
    private javax.swing.JCheckBox C7;
    private javax.swing.JCheckBox C8;
    private javax.swing.JCheckBox C9;
    private javax.swing.JCheckBox D1;
    private javax.swing.JCheckBox D10;
    private javax.swing.JCheckBox D2;
    private javax.swing.JCheckBox D3;
    private javax.swing.JCheckBox D4;
    private javax.swing.JCheckBox D5;
    private javax.swing.JCheckBox D6;
    private javax.swing.JCheckBox D7;
    private javax.swing.JCheckBox D8;
    private javax.swing.JCheckBox D9;
    private javax.swing.JCheckBox E1;
    private javax.swing.JCheckBox E10;
    private javax.swing.JCheckBox E2;
    private javax.swing.JCheckBox E3;
    private javax.swing.JCheckBox E4;
    private javax.swing.JCheckBox E5;
    private javax.swing.JCheckBox E6;
    private javax.swing.JCheckBox E7;
    private javax.swing.JCheckBox E8;
    private javax.swing.JCheckBox E9;
    private javax.swing.JCheckBox F1;
    private javax.swing.JCheckBox F10;
    private javax.swing.JCheckBox F2;
    private javax.swing.JCheckBox F3;
    private javax.swing.JCheckBox F4;
    private javax.swing.JCheckBox F5;
    private javax.swing.JCheckBox F6;
    private javax.swing.JCheckBox F7;
    private javax.swing.JCheckBox F8;
    private javax.swing.JCheckBox F9;
    private javax.swing.JTextField FirstName;
    private javax.swing.JTextField LastName;
    private javax.swing.JComboBox<String> Movie;
    private javax.swing.JComboBox<String> Room;
    private javax.swing.JComboBox<String> Tickets;
    private javax.swing.JComboBox<String> Time;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem2;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    
    
    
    public void updateMovieBox(){
    
     Connection con;
        SqlCon movie_ret = new SqlCon();
        con = movie_ret.getConnection();
        
    if (con!=null)
    {
        try {
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("Select MovieName from adminmovieconfig");
            while(rs.next())
                {
                    Movie.addItem(rs.getString("MovieName"));
                            }
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    else
    {
    JOptionPane.showMessageDialog(rootPane, "Database is down.");
    }
    
    
    
    }
    
    public void updateRoomBox()
    {
    
   
        if (Movie.getSelectedItem()==null)
        {
        
        
        }
        else
        {
        String SelectedMovie= Movie.getSelectedItem().toString();

       
      Connection con;
        SqlCon movie_ret = new SqlCon();
        con = movie_ret.getConnection();
        
        
       
        
        
        
        try {
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("Select Room from adminmovieconfig Where MovieName ='" + SelectedMovie + "'");
            
            while(rs.next())
                {
                    
                    String rooms = rs.getString("Room");
                    String[] arrSplit_3 = rooms.split("\\s");            
                    for(int i=0 ; i<arrSplit_3.length ; i++)
                    {
                       
                    Room.addItem(arrSplit_3[i]);
                    }
                            }
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    
        }
    }
    
    public void DeleteOldValues()
    {
        Room.removeAllItems();
        Time.removeAllItems();
}
    
    public void TimeConstruct()
    {
    
     Connection con;
        SqlCon movie_ret = new SqlCon();
        con = movie_ret.getConnection();
        
                String SelectedMovie= Movie.getSelectedItem().toString();

       
                 
        
        
        try {
            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery("Select StartTime, MovieMinutes, EndTime,Repetitions,RestBetweenReps from adminmovieconfig Where MovieName ='" + SelectedMovie + "'");
            

            while(rs.next())
                {
                    
                        String St = rs.getString("StartTime");
                        String startWithoutSecs[] = St.split(":"); 
                        String startH = startWithoutSecs[0]; 
                        String startM = startWithoutSecs[1];        
                        String startHM = startH + ":" +startM;
                     
                        String Et = rs.getString("EndTime");
                        String endWithoutSecs[] = Et.split(":"); 
                        String endH = endWithoutSecs[0]; 
                        String endM = endWithoutSecs[1];       
                        String endHM = endH + ":" + endM;
                    
                        int rest = 10;
                        String restS = "00:10:00";
                        int MovMinInt = rs.getInt("MovieMinutes");
                        String movMinString = rs.getString("MovieMinutes");
                        String movMinStrinh24H = "00" + ":" + movMinString + ":" +"00";

                        String Dur[] = movMinStrinh24H.split(":"); 
                        String h = Dur[0]; 
                        String m = Dur[1];       
                        String sec = Dur[2];  
                        long hl = Long.parseLong(h);
                        long ml = Long.parseLong(m);
                        long sl = Long.parseLong(sec);
                   
                   
                         String [] startSplit = St.split(":");
                         String sh = startSplit[0]; 
                         String sm = startSplit[1];       
               
                         String [] endSplit = Et.split(":");
                         String eh = endSplit[0]; 
                         String em = endSplit[1];       
               
                int restBeReps =  Integer.parseInt(rs.getString("RestBetweenReps"));
                
                
                Duration d= Duration.ofHours(hl).plusMinutes(ml).plusSeconds(sl);
                Duration restt = Duration.ofMinutes(restBeReps);
                
                LocalTime time = LocalTime.parse(startHM, DateTimeFormatter.ofPattern("HH:mm"));
                LocalTime timeEnd = LocalTime.parse(endHM, DateTimeFormatter.ofPattern("HH:mm"));
                 
                     
                      
                    
                         
                         
                         time = time.plus(d);                 
                         String timeS = startHM + " - " + time;
                             
                         Time.addItem(timeS);
                         
                  int reps = Integer.parseInt(rs.getString("Repetitions"));
                  int i = 0; 
                      
               while ( i < reps-1  )
                     {
                          
                       if ( !timeEnd.isBefore(time) && !timeEnd.isAfter(time)  )
                       {
                         
                           break;
                       }
                       else
                       {
                        time = time.plus(restt);       
                       timeS = time + " - " + (time = time.plus(d));
                       Time.addItem(timeS);
                       

                       }
                       i++;
                     }
               
               
               
                
                    
                }
            
            
            
        } catch (SQLException ex) {
            Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
    }   
    
}
    



public  int getNumOfTicket()
{
if (Tickets.getItemCount() == 0)
{
    return 0;
}
else{
return Integer.parseInt (Tickets.getSelectedItem().toString() );
}
}


public String  ReservedSeats()

{
    
     Connection con;
        SqlCon movie_ret = new SqlCon();
        con = movie_ret.getConnection();
        
                String SelectedMovie= Movie.getSelectedItem().toString();
                   ArrayList list = new ArrayList();
       
           String unavailableSeats = null;      
              Component[] comps = jPanel1.getComponents();
    List<String> checkedTexts = new ArrayList<>();
        
        try {
            Statement s;
             s = con.createStatement();
            ResultSet rs = s.executeQuery("Select Seats from usergui Where Movie ='" + SelectedMovie + "'");

            while(rs.next())
                {
                    
                      list.add(rs.getString("Seats"));
                }
         
             String [] itemnameArray = new String [list.size()];
            list.toArray(itemnameArray);
            StringBuilder builder = new StringBuilder();
            for (String value : itemnameArray) 
                {
                       builder.append(value);

                         
                         }
                 String text = builder.toString();
         for (Component comp : comps)
         {
        
        if (comp instanceof JCheckBox) 
        {
            JCheckBox box = (JCheckBox) comp;
            
            
            if (text.contains(box.getName()))
            {
            
            
            box.setEnabled(false);
            
            }
            else
            {
             box.setEnabled(true);
            }
            
            
        }
        
        
        
         }
                
                
                
                if(itemnameArray.length >0)
                {
                   unavailableSeats =" ";
                }
                else if(itemnameArray.length ==0)
                {               
                unavailableSeats ="All seats are available";
                }

}
        catch (SQLException ex) 
        {
        Logger.getLogger(UserGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
      return unavailableSeats;  
}

public boolean IsReserved()
{
    
    
     Connection con;
        SqlCon movie_ret = new SqlCon();
        con = movie_ret.getConnection();
        
                String SelectedMovie= Movie.getSelectedItem().toString();
                   ArrayList list = new ArrayList();
       
           boolean flag = false;    
       
    
    
    return flag;
    
}

public void ManualSeatSelection()
{
    
 List<JCheckBox> manualSeats = new ArrayList<>();
manualSeats.add(B10);
manualSeats.add(B9);
manualSeats.add(B8);
manualSeats.add(B7);
manualSeats.add(B6);
manualSeats.add(B5);
manualSeats.add(B4);
manualSeats.add(B3);
manualSeats.add(B2);
manualSeats.add(B1);
manualSeats.add(C10);
manualSeats.add(C9);
manualSeats.add(C8);
manualSeats.add(C7);
manualSeats.add(C6);
manualSeats.add(C5);
manualSeats.add(C4);
manualSeats.add(C3);
manualSeats.add(C2);
manualSeats.add(C1);
manualSeats.add(D10);
manualSeats.add(D9);
manualSeats.add(D8);
manualSeats.add(D7);
manualSeats.add(D6);
manualSeats.add(D5);
manualSeats.add(D4);
manualSeats.add(D3);
manualSeats.add(D2);
manualSeats.add(D1);
manualSeats.add(E10);
manualSeats.add(E9);
manualSeats.add(E8);
manualSeats.add(E7);
manualSeats.add(E6);
manualSeats.add(E5);
manualSeats.add(E4);
manualSeats.add(E3);
manualSeats.add(E2);
manualSeats.add(E1);
manualSeats.add(F10);
manualSeats.add(F9);
manualSeats.add(F8);
manualSeats.add(F7);
manualSeats.add(F6);
manualSeats.add(F5);
manualSeats.add(F4);
manualSeats.add(F3);
manualSeats.add(F2);
manualSeats.add(F1);
String SelectedItem = null;

boolean allSelected = true;
for(Component component : jPanel1.getComponents()) {
  if(component instanceof JCheckBox) {
    allSelected &= ((JCheckBox)component).isSelected();
  }
}


}


    private List<String> manageCheckedCheckboxes() 
    {
       
         Component[] comps = jPanel1.getComponents();
    List<String> checkedTexts = new ArrayList<>();

    for (Component comp : comps) {

        if (comp instanceof JCheckBox) {
            JCheckBox box = (JCheckBox) comp;
            if (box.isSelected()) {
                String text = box.getName();
                checkedTexts.add(text+ " ");
            }
        }
    }

    return checkedTexts;

       
    }
public List<String> AutoSeatInput() 
    {
       
         Component[] comps = jPanel1.getComponents();
    List<String> checkedTexts = new ArrayList<>();

    Random randomGenerator = new Random();
              int randomIntforSeat = randomGenerator.nextInt(5);
        int randomIntforNum = randomGenerator.nextInt(10)+1;
          String[] seat ={"B", "C", "D", "E", "F"};
           String tickets = (String) Tickets.getSelectedItem();
            int ticketsInt = 0;
           
           if (tickets!=null)
           {
             ticketsInt = Integer.parseInt(tickets);
        
            String chooseSeat;    
            String chosenSeat = null;
                    chooseSeat = seat[randomIntforSeat];
                    randomIntforNum = randomGenerator.nextInt(10-1)+1;
            chosenSeat = chooseSeat +  randomIntforNum;
            int count = 1;
         
     for (Component comp : comps)
    {

        if (comp instanceof JCheckBox) 
        {
            JCheckBox box1 = (JCheckBox) comp;
            if (((JCheckBox) box1).isEnabled())
                    {
                    
                    ((JCheckBox) box1).setSelected(false);
            ((JCheckBox) box1).setEnabled(true);
                    }
            
        }
    }
     while (count <= ticketsInt)
     {
    for (Component comp : comps) 
    {

        if (comp instanceof JCheckBox)
        {
            JCheckBox box = (JCheckBox) comp;   
                  chosenSeat = chooseSeat +  randomIntforNum;
                     
                   if(box.isEnabled())
                   {
                     if (chosenSeat.equals( box.getName()))
                         {  
                             ((JCheckBox) box).setSelected(true);
                             String text = box.getName();
                             checkedTexts.add(text+ " ");
                              randomIntforNum++;                        
                                count++;   

                         }
                   }
                     if (randomIntforNum>10)
                     {
                     randomIntforNum=randomIntforNum-ticketsInt;
                     }    
                     
         }
  

}}}
           else
           {
           
           JOptionPane.showMessageDialog(rootPane, "Select number of tickets."); 
           }
     return checkedTexts;

      
}
public void ManualInput()
{


 
         Component[] comps = jPanel1.getComponents();
    List<String> checkedTexts = new ArrayList<>();

    for (Component comp : comps)
    {

        if (comp instanceof JCheckBox) 
        {
            JCheckBox box1 = (JCheckBox) comp;

            ((JCheckBox) box1).setEnabled(true);
        }
    }




}
public String getSeats()
{




                
 String [] seatsUser = new String [manageCheckedCheckboxes().size()];
                manageCheckedCheckboxes() .toArray(seatsUser);               
                
          
                
StringBuilder builder1 = new StringBuilder();
                for (String value : seatsUser) 
                {
                       builder1.append(value);
                }
                String text1 = builder1.toString();                    
        return text1;
                
                
          
}

public boolean TicketValidation()
{
    
    boolean validation = false;
    
    String tickets = (String) Tickets.getSelectedItem();
    int ticketsInt = Integer.parseInt(tickets);
         Component[] comps = jPanel1.getComponents();
    List<String> checkedTexts = new ArrayList<>();
        int count = 0;
    for (Component comp : comps)
    {

        if (comp instanceof JCheckBox) 
        {
            JCheckBox box1 = (JCheckBox) comp;

            if(((JCheckBox) box1).isSelected())
            {
            
            count++;
            }
            
        }
    }
    System.out.println(count);
    if (count>ticketsInt)
    {
    
   validation = true;

    }
        

return validation;

}

       
}

